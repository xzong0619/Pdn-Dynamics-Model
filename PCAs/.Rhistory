seq(1,10, by = 0.5)
seq(0,10, by = 0.5)
my_seq <- seq(5,10, length = 30)
len(my_seq)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10,  6)
tf <- num_vect < 1
tf
num_vect>=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "yf")
my_name <- c(my_char, "yf")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
c(44, NA, 5, NA)
x <-  c(44, NA, 5, NA)
x*3
y <- rnomr(1000)
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- my_data.na()
my_na <- is.na(my_data)
my_na
z
y
my_data == NA
sum(my_data == NA)
sum(my_data)
sum(my_na)
my_data
0/0
Inf-Inf
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical((my_matrix, my_matrix2))
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patinets, my_matrix)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(cnames)
colnames(mydata) <- cnames
colnames(my_data) <- cnames
my_data
## to get the loadings
out2$loadings
library(elasticnet)
data(pitprops)
out1<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06,0.16,0.1,0.5,0.5,0.5))
## print the object out1
out1
out2<-spca(pitprops,K=6,type="Gram",sparse="varnum",trace=TRUE,para=c(7,4,4,1,1,1))
out2
## to see the contents of out2
names(out2)
## to get the loadings
out2$loadings
data(pitprops)
library(elasticnet)
data(pitprops)
View(pitprops)
View(pitprops)
class(pitprops)
dim(pitprops)
out2$loadings
library(elasticnet)
data(pitprops)
out1<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06,0.16,0.1,0.5,0.5,0.5))
## print the object out1
out1
out2<-spca(pitprops,K=6,type="Gram",sparse="varnum",trace=TRUE,para=c(7,4,4,1,1,1))
out2
## to see the contents of out2
names(out2)
## to get the loadings
out2$loadings
out2$loadings
View(out2)
View(out2)
View(out1)
View(out1)
View(pitprops)
View(pitprops)
out1$var.all
out2$var.all
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=0)
View(out3)
View(out3)
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=0.06)
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,0))
View(out3)
View(out3)
out3[["loadings"]]
pev
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(2, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(3.5, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(3.5, 0, 0, 0,0,0))
out3$pev
View(out3)
library(elasticnet)
data(pitprops)
out1<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06,0.16,0.1,0.5,0.5,0.5))
## print the object out1
out1
out2<-spca(pitprops,K=6,type="Gram",sparse="varnum",trace=TRUE,para=c(7,4,4,1,1,1))
out2
## to see the contents of out2
names(out2)
## to get the loadings
out2$loadings
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(3.5, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(3, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(10, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 2.5, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,1))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,1.2))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,0.5))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(4, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(4, 0, 0, 0, 0, 0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0, 0, 0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0, 0, 0))
sum(out3$pev)
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(5, 0, 0, 0, 0, 0))
out3$pev
sum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
sum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
sum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
sum(out3$pev)
?cumsum
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
cumsum(out3$pev)
View(out3)
View(out3)
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(100))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(1))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(3.5))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(3.4))
out3$pev
cumsum(out3$pev)
biplot(pitprops)
library(HSAUR)
install.packages(HSAUR)
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 2.4))
out4$pev
cumsum(out4$pev)
## to get the figure 2 PEV for PC1
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(3.4))
out3$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 2.6))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 2.6))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.16))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.2))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.25))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.3))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.3))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.4))
out4$pev
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 1))
out4$pev
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.5))
out4$pev
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(3.5, 0.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=3,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0.1))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=3,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=3,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0))
out4$pev/sum(out4$pev)
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0))
out4$pev/sum(out4$pev)
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 2.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.16))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 1.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 2))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16, 0.1, 0.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16, 0.1, 1.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16, 0.1, 1.8))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 1.8))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16, 0.1, 1.8))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16, 0.1, 0.5))
out4$pev
## to get the figure 2 PEV for PC1
out3<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(3.4. 0))
out3$pev
## to get the figure 2 PEV for PC1
out3<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(3.4, 0))
out3$pev
## to get the figure 2 PEV for PC1
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(3.4))
out3$pev
library('swirl')
swirl()
swirl()
swirl()
Sys.Date()
mean(c(2,4,5))
sumbit()
sumbit()
submit()
submit()
submit()
submit()
submit()
submit()
0
0
1
library("swirl")
swirl()
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
remainder(div = 2, 4)
args(remainder)
submit()
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(v){v[1], c(8,4,0))
evaluate(function(v){v[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("I like pasta")
submit()
submit()
0
exit
library("swirl")
swirl()
swirl()
swirl()
swirl()
info()
skip()
skip()
skip()
skip()
data(cars)
?cars
head(cars)
plot(cars)
?plog
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars,  xlim = c(10,15))
plot(cars,  pch =2 )
data("mtcars")
data(mtcars)
?boxploy
?boxplot
boxplot(mpg ~ cyl)
boxplot(mpg ~ cyl, mtcars)
hist(mtcars$mpg)
## Use to plot figure 2 in Zou SPCA paper
## library and data
library(elasticnet)
data(pitprops)
# Lambda1 used in the paper
lambda1_paper <- c(0.06, 0.16, 0.1, 0.5, 0.5, 0.5)
## Plot PC function,
## takes in the index of PC and the range of lambda1 used in plotting
plot_PCi <- function(iPC, lambda_range) {
PCn <- paste("PC",iPC, sep = '')
pc_pev <- c()
# lambda1 used to plot for this PC
lambda1 <- seq(0, lambda_range, length = 20)
# Set the lambdas for previous PCs
if (iPC >= 1){
# previous lambdas, Set all other PC pently as 0, no lasso regularization
pre_lambdas = rep(0,times = iPC-1)
# previous lambdas, Set all other PC pently as the previously determined values
pre_lambdas = lambda1_paper[1:iPC-1]
} else {
pre_lambdas = c()
}
# Loop through each lambda for plotting
for (i in 1:length(lambda1)){
pc <- spca(pitprops, K=iPC, type="Gram", sparse="penalty", trace=TRUE,
para = c(pre_lambdas, lambda1[i]))
pc_pev[i] <- pc$pev[iPC]
}
# save the plot to png
png(paste(PCn, ".png", sep = '') ,width=5,height=5,units="in",res=900)
plot(lambda1, pc_pev, main = PCn, ylab = 'PEV',  col = "red")
lines(lambda1, pc_pev, type ='l', lty=2)
lines(lambda1_paper[iPC] * rep(1, times = length((lambda1))), pc_pev, type ='l', lty=2, col = 'blue')
dev.off()
}
# PC 1
plot_PCi(1,3.5)
# PC 2
plot_PCi(2,3)
# PC 3
plot_PCi(3,2)
# PC 4
plot_PCi(4,2)
# PC 5
plot_PCi(5,1.1)
# PC 6
plot_PCi(6,1.1)
setwd("~/GitHub/Pdn-Dynamics-Model/PCAs")
## Use to plot figure 2 in Zou SPCA paper
## library and data
library(elasticnet)
data(pitprops)
# Lambda1 used in the paper
lambda1_paper <- c(0.06, 0.16, 0.1, 0.5, 0.5, 0.5)
## Plot PC function,
## takes in the index of PC and the range of lambda1 used in plotting
plot_PCi <- function(iPC, lambda_range) {
PCn <- paste("PC",iPC, sep = '')
pc_pev <- c()
# lambda1 used to plot for this PC
lambda1 <- seq(0, lambda_range, length = 20)
# Set the lambdas for previous PCs
if (iPC >= 1){
# previous lambdas, Set all other PC pently as 0, no lasso regularization
pre_lambdas = rep(0,times = iPC-1)
# previous lambdas, Set all other PC pently as the previously determined values
pre_lambdas = lambda1_paper[1:iPC-1]
} else {
pre_lambdas = c()
}
# Loop through each lambda for plotting
for (i in 1:length(lambda1)){
pc <- spca(pitprops, K=iPC, type="Gram", sparse="penalty", trace=TRUE,
para = c(pre_lambdas, lambda1[i]))
pc_pev[i] <- pc$pev[iPC]
}
# save the plot to png
png(paste(PCn, ".png", sep = '') ,width=5,height=5,units="in",res=900)
plot(lambda1, pc_pev, main = PCn, ylab = 'PEV',  col = "red")
lines(lambda1, pc_pev, type ='l', lty=2)
lines(lambda1_paper[iPC] * rep(1, times = length((lambda1))), pc_pev, type ='l', lty=2, col = 'blue')
dev.off()
}
# PC 1
plot_PCi(1,3.5)
# PC 2
plot_PCi(2,3)
# PC 3
plot_PCi(3,2)
# PC 4
plot_PCi(4,2)
# PC 5
plot_PCi(5,1.1)
# PC 6
plot_PCi(6,1.1)
data("diabetes")
View(diabetes)
View(diabetes)
print.spca()
## The example given in Zou elasticnet package
## library and data
library(elasticnet)
data(pitprops)
out1<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06,0.16,0.1,0.5,0.5,0.5))
## print the object out1 out1
out1
out2<-spca(pitprops,K=6,type="Gram",sparse="varnum",trace=TRUE,para=c(7,4,4,1,1,1))
out2
## to see the contents of out2
names(out2)
## to get the loadings
out2$loadings
print.spca(out2)
