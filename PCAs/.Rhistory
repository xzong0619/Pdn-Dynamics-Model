## to see the contents of out2
names(out2)
## to get the loadings
out2$loadings
out2$loadings
View(out2)
View(out2)
View(out1)
View(out1)
View(pitprops)
View(pitprops)
out1$var.all
out2$var.all
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=0)
View(out3)
View(out3)
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=0.06)
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,0))
View(out3)
View(out3)
out3[["loadings"]]
pev
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(2, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(3.5, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(3.5, 0, 0, 0,0,0))
out3$pev
View(out3)
library(elasticnet)
data(pitprops)
out1<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06,0.16,0.1,0.5,0.5,0.5))
## print the object out1
out1
out2<-spca(pitprops,K=6,type="Gram",sparse="varnum",trace=TRUE,para=c(7,4,4,1,1,1))
out2
## to see the contents of out2
names(out2)
## to get the loadings
out2$loadings
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(3.5, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(3, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(10, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 2.5, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,1))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,1.2))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0,0,0.5))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(4, 0, 0, 0,0,0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(4, 0, 0, 0, 0, 0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0, 0, 0))
out3$pev
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0, 0, 0))
sum(out3$pev)
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=c(5, 0, 0, 0, 0, 0))
out3$pev
sum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
sum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
sum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
sum(out3$pev)
?cumsum
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=c(100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
out3$pev
cumsum(out3$pev)
View(out3)
View(out3)
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(100))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(1))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(3.5))
out3$pev
cumsum(out3$pev)
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(3.4))
out3$pev
cumsum(out3$pev)
biplot(pitprops)
library(HSAUR)
install.packages(HSAUR)
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 2.4))
out4$pev
cumsum(out4$pev)
## to get the figure 2 PEV for PC1
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(3.4))
out3$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 2.6))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 2.6))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.16))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.2))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.25))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.3))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.3))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.4))
out4$pev
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 1))
out4$pev
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.5))
out4$pev
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(3.5, 0.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=3,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0.1))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=3,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=3,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0))
out4$pev/sum(out4$pev)
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0))
out4$pev/sum(out4$pev)
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 2.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0.16))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 0))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 1.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 2))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16, 0.1, 0.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16, 0.1, 1.5))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16, 0.1, 1.8))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0, 0, 0, 1.8))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16, 0.1, 1.8))
out4$pev
## to get the figure 2 PEV for PC2
out4<-spca(pitprops,K=4,type="Gram",sparse="penalty",trace=TRUE,para=c(0.06, 0.16, 0.1, 0.5))
out4$pev
## to get the figure 2 PEV for PC1
out3<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(3.4. 0))
out3$pev
## to get the figure 2 PEV for PC1
out3<-spca(pitprops,K=2,type="Gram",sparse="penalty",trace=TRUE,para=c(3.4, 0))
out3$pev
## to get the figure 2 PEV for PC1
out3<-spca(pitprops,K=1,type="Gram",sparse="penalty",trace=TRUE,para=c(3.4))
out3$pev
library('swirl')
swirl()
swirl()
swirl()
Sys.Date()
mean(c(2,4,5))
sumbit()
sumbit()
submit()
submit()
submit()
submit()
submit()
submit()
0
0
1
library("swirl")
swirl()
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
remainder(div = 2, 4)
args(remainder)
submit()
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(v){v[1], c(8,4,0))
evaluate(function(v){v[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("I like pasta")
submit()
submit()
0
exit
library("swirl")
swirl()
swirl()
swirl()
swirl()
info()
skip()
skip()
skip()
skip()
data(cars)
?cars
head(cars)
plot(cars)
?plog
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars,  xlim = c(10,15))
plot(cars,  pch =2 )
data("mtcars")
data(mtcars)
?boxploy
?boxplot
boxplot(mpg ~ cyl)
boxplot(mpg ~ cyl, mtcars)
hist(mtcars$mpg)
setwd("~/GitHub/Pdn-Dynamics-Model/PCAs")
install.packages(c("FaceoMineR", "factorextra"))
install.packages(c("FactoMineR", "factorextra"))
# Following the example of
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/112-pca-principal-component-analysis-essentials/
library("FactoMineR")
library("factoextra")
install.packages("factorextra")
install.packages("factoextra")
library("FactoMineR")
library("factoextra")
data(decathlon2)
head(decathlon2)
View(decathlon2)
View(decathlon2)
decathlon2.active,
decathlon2.active
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, 1:6], 4)
res.pca <- PCA(decathlon2.active, graph = FALSE)
res.pca <- PCA(decathlon2.active, graph = FALSE)
print(res.pca)
eig.val <- get_eigenvalue(res.pca)
eig.val
# Make Scree Plot
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
# Extra the active variables
var <- get_pca_var(res.pca)
var
# Coordinates
head(var$coord)
# Cos2: quality on the factore map
head(var$cos2)
# Contributions to the principal components
head(var$contrib)
# Coordinates of variables
head(var$coord, 4)
fviz_pca_var(res.pca, col.var = "black")
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
install.packages("corrplot")
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
# Coordinates, I think these are loadings
head(var$coord)
# Plot coordinates of variables
head(var$coord, 4)
fviz_pca_var(res.pca, col.var = "black")
# Cos2: quality on the factore map
head(var$cos2)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
# Coordinates, I think these are loadings
head(var$coord)
# Plot coordinates of variables
fviz_pca_var(res.pca, col.var = "black")
# Cos2: quality on the factore map
head(var$cos2)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
# Total cos2 of variables on Dim.1 and Dim.2
fviz_cos2(res.pca, choice = "var", axes = 1:2)
# Color by cos2 values: quality on the factor map
fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
# Coordinates, I think these are loadings
head(var$coord)
# Plot coordinates of variables
fviz_pca_var(res.pca, col.var = "black")
# Color by cos2 values: quality on the factor map
fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
# Coordinates, I think these are loadings
head(var$coord)
# Plot coordinates of variables
fviz_pca_var(res.pca, col.var = "black")
# Color by cos2 values: quality on the factor map
fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
# Change the transparency by cos2 values
fviz_pca_var(res.pca, alpha.var = "cos2")
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1, top = 10)
# Contributions of variables to PC2
fviz_contrib(res.pca, choice = "var", axes = 2, top = 10)
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1, top = 10)
library(factoextra)
data(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, 1:6])
res.pca <- prcomp(decathlon2.active, scale = TRUE)
res.pca
## library and data
library(elasticnet)
data(pitprops)
out3<-spca(pitprops,K=13,type="Gram",sparse="penalty",trace=TRUE,para=rep(0, times = 13))
out4 <- prcomp(pitprops, scale = TRUE)
out4
out3<-spca(pitprops,K=6,type="Gram",sparse="penalty",trace=TRUE,para=rep(0, times = 13))
out4 <- prcomp(pitprops, rank = 6, scale = TRUE)
out4$rotation
out4 <- prcomp(pitprops, rank = 6, scale = FALSE)
out4$rotation
fviz_eig(res.pca)
# Graph of individuals. Individuals with a similar profile are grouped together
fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
# Graph of variables. Positive correlated variables point to the same side of the plot. Negative correlated variables point to opposite sides of the graph.
fviz_pca_var(res.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
x <- matrix(1:10, ncol = 2)
View(x)
View(x)
centered.x <- scale(x, scale = FALSE)
View(centered.x)
View(centered.x)
View(x)
View(x)
centered.x <- scale(x)
View(centered.x)
View(centered.x)
mean(centered.x)
x <- matrix(1:4, ncol = 2)
centered.x <- scale(x)
View(x)
View(x)
centered.x <- scale(x, center = TRUE)
View(centered.x)
View(centered.x)
df <- read.csv("synthetic_data.csv", header=TRUE)
View(df)
View(df)
View(df)
pca <- prcomp(X_std, scale = FALSE)
# Read scaled data
X_std <- read.csv("synthetic_data.csv", header=TRUE)
# Perform PCA
pca <- prcomp(X_std, scale = FALSE)
View(pca)
View(pca)
# Loading matrix/ eigenvectors
eig_vec <- pca$rotation
View(eig_vec)
View(eig_vec)
View(pca)
View(pca)
pca
summary(pZ)
summary(pca)
xx <- summary(pca)
xx
View(xx)
View(xx)
# Compare SPCA and prcomp
spca <- spca(X_std,K=10,type="Gram",sparse="penalty",trace=TRUE,para=rep(0, times = 10))
# Compare SPCA and prcomp
spca <- spca(X_std,K=10,type="predictor",sparse="penalty",trace=TRUE,para=rep(0, times = 10))
View(spca)
View(spca)
# Loading matrix/ eigenvectors
spca_loading <- spca$loadings
View(spca_loading)
View(spca_loading)
identical(pca_loading,spca_loading)
# Read scaled data
X_std <- read.csv("synthetic_data.csv", header=TRUE)
# Perform PCA
pca <- prcomp(X_std, scale = FALSE)
# Loading matrix/ eigenvectors
pca_loading <- pca$rotation
# Compare SPCA and prcomp
spca <- spca(X_std,K=10,type="predictor",sparse="penalty",trace=TRUE,para=rep(0, times = 10))
# Loading matrix/ eigenvectors
spca_loading <- spca$loadings
identical(pca_loading,spca_loading)
pca_loading == spca_loading
pca_loading - spca_loading
difference = max(abs(pca_loading - spca_loading))
spca_ <- spca(X_std,K=2,type="predictor",sparse="varnum",trace=TRUE,para=c(4,4))
View(spca_)
View(spca_)
spca_[["loadings"]]
spca_2_pev <- spca_2$pev
# Perform proper sparse PCA on the data
spca_2 <- spca(X_std,K=2,type="predictor",sparse="varnum",trace=TRUE,para=c(4,4))
spca_2_loading <- spca_2$loadings
spca_2_pev <- spca_2$pev
spca_2_pev
# Perform proper sparse PCA on the data
spca_2 <- spca(X_std,K=3,type="predictor",sparse="varnum",trace=TRUE,para=c(4,4,2))
spca_2_loading <- spca_2$loadings
spca_2_pev <- spca_2$pev
spca_2_loading
spca_2_pev
# Perform proper sparse PCA on the data
spca_2 <- spca(X_std,K=10,type="predictor",sparse="varnum",trace=TRUE,para=c(4,4,2, rep(0, times = 7)))
spca_2_loading <- spca_2$loadings
spca_2_pev <- spca_2$pev
cumsum(spca_2_pev)
